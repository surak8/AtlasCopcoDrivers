//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Reflection;
using System.Windows;
using Colt.Utility.Logging;

namespace NSNewDriver {


	public partial class App : Application, IColtLoggerProvider {
		MainWindow _mw;

		IColtLogger   _logger;
		public IColtLogger logger { get { return _logger; } private set { _logger = value; } }

		public App() {
			_logger = DefaultColtLogger.createDefault();
		}

		protected override void OnSessionEnding(SessionEndingCancelEventArgs e) {
			logger.log(MethodBase.GetCurrentMethod());
			base.OnSessionEnding(e);
		}

		void Application_Startup(object sender, StartupEventArgs e) {
			logger.log(MethodBase.GetCurrentMethod());
			_mw = new MainWindow(logger);
			Application.Current.MainWindow = _mw;
			_mw.Show();
		}

		void Application_Exit(object sender, ExitEventArgs e) {
			logger.log(MethodBase.GetCurrentMethod());
			if (logger != null) {
				logger.Dispose();
				logger = null;
			}
		}

		void Application_DispatcherUnhandledException(object sender, System.Windows.Threading.DispatcherUnhandledExceptionEventArgs e) {
			logger.log(MethodBase.GetCurrentMethod(), e.Exception);
			e.Handled = true;
		}
	}
}