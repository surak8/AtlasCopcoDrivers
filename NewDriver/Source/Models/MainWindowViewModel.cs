//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Reflection;


namespace NSNewDriver {
    
    public partial class MainWindowViewModel : INotifyPropertyChanged {
		#region ctor
		public MainWindowViewModel() {
			windowTitle = "hello, world";
		}

		#endregion

		#region INotifyPropertyChanged helpers
		public event PropertyChangedEventHandler PropertyChanged;
		public void firePropertyChanged(string propertyName) {
			if ((this.PropertyChanged != null)) {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		public void firePropertyChanged(MethodBase mb) {
			int n;

			if (((n = mb.Name.Length)
						> 4)) {
				if (((string.Compare(mb.Name.Substring(0, 3), "get", true) == 0)
							|| (string.Compare(mb.Name.Substring(0, 3), "set", true) == 0))) {
					firePropertyChanged(mb.Name.Substring(4));
				}
			}
		}
		#endregion

		internal void createListener(string addr, int nport) {
			if (_acListener == null) {
				_acListener = new ACListener(addr, nport);
				_acListener.start();
			}
		}


		#region properties
		/// <summary>backing-store for property windowWidth of type <b>double</b>.</summary>
		/// <seealso name="windowWidth"/>
		[DebuggerBrowsable(DebuggerBrowsableState.Never)]
		double _windowWidth;

		/// <summary>property windowWidth.</summary>
		/// <seealso name="_windowWidth"/>
		public double windowWidth {
			get { return _windowWidth; }
			set { _windowWidth = value; firePropertyChanged(MethodBase.GetCurrentMethod()); }
		}

		/// <summary>backing-store for property windowHeight of type <b>double</b>.</summary>
		/// <seealso name="windowHeight"/>
		[DebuggerBrowsable(DebuggerBrowsableState.Never)]
		double _windowHeight;

		/// <summary>property windowHeight.</summary>
		/// <seealso name="_windowHeight"/>
		public double windowHeight {
			get { return _windowHeight; }
			set { _windowHeight = value; firePropertyChanged(MethodBase.GetCurrentMethod()); }
		}

		/// <summary>backing-store for property windowLeft of type <b>double</b>.</summary>
		/// <seealso name="windowLeft"/>
		[DebuggerBrowsable(DebuggerBrowsableState.Never)]
		double _windowLeft;

		/// <summary>property windowLeft.</summary>
		/// <seealso name="_windowLeft"/>
		public double windowLeft {
			get { return _windowLeft; }
			set { _windowLeft = value; firePropertyChanged(MethodBase.GetCurrentMethod()); }
		}


		/// <summary>backing-store for property windowTop of type <b>double</b>.</summary>
		/// <seealso name="windowTop"/>
		[DebuggerBrowsable(DebuggerBrowsableState.Never)]
		double _windowTop;

		/// <summary>property windowTop.</summary>
		/// <seealso name="_windowTop"/>
		public double windowTop {
			get { return _windowTop; }
			set { _windowTop = value; firePropertyChanged(MethodBase.GetCurrentMethod()); }
		}


		/// <summary>backing-store for property windowTitle of type <b>string</b>.</summary>
		/// <seealso name="windowTitle"/>
		[DebuggerBrowsable(DebuggerBrowsableState.Never)]
		string _windowTitle;
		private ACListener _acListener;

		/// <summary>property windowTitle.</summary>
		/// <seealso name="_windowTitle"/>
		public string windowTitle {
			get { return _windowTitle; }
			set { _windowTitle = value; firePropertyChanged(MethodBase.GetCurrentMethod()); }
		}

		#endregion
	}
}
