//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace tests {
    using System.Diagnostics;
    
    public class Tester {
        public void runTests() {
            new TestMid0001().runTests();
            new TestMid0002().runTests();
            new TestMid0003().runTests();
            new TestMid0004().runTests();
            new TestMid0005().runTests();
            new TestMid0006().runTests();
            new TestMid0008().runTests();
            new TestMid0010().runTests();
            new TestMid0011().runTests();
            new TestMid0012().runTests();
            new TestMid0013().runTests();
            new TestMid0014().runTests();
            new TestMid0015().runTests();
            new TestMid0016().runTests();
            new TestMid0017().runTests();
            new TestMid0018().runTests();
            new TestMid0019().runTests();
            new TestMid0020().runTests();
            new TestMid0021().runTests();
            new TestMid0022().runTests();
            new TestMid0023().runTests();
            new TestMid0024().runTests();
            new TestMid0030().runTests();
            new TestMid0031().runTests();
            new TestMid0032().runTests();
            new TestMid0033().runTests();
            new TestMid0034().runTests();
            new TestMid0035().runTests();
            new TestMid0036().runTests();
            new TestMid0037().runTests();
            new TestMid0038().runTests();
            new TestMid0039().runTests();
            new TestMid0040().runTests();
            new TestMid0041().runTests();
            new TestMid0042().runTests();
            new TestMid0043().runTests();
            new TestMid0044().runTests();
            new TestMid0045().runTests();
            new TestMid0046().runTests();
            new TestMid0047().runTests();
            new TestMid0048().runTests();
            new TestMid0050().runTests();
            new TestMid0051().runTests();
            new TestMid0052().runTests();
            new TestMid0053().runTests();
            new TestMid0054().runTests();
            new TestMid0060().runTests();
            new TestMid0061().runTests();
            new TestMid0062().runTests();
            new TestMid0063().runTests();
            new TestMid0064().runTests();
            new TestMid0065().runTests();
            new TestMid0070().runTests();
            new TestMid0071().runTests();
            new TestMid0072().runTests();
            new TestMid0073().runTests();
            new TestMid0074().runTests();
            new TestMid0075().runTests();
            new TestMid0076().runTests();
            new TestMid0077().runTests();
            new TestMid0078().runTests();
            new TestMid0080().runTests();
            new TestMid0081().runTests();
            new TestMid0082().runTests();
            new TestMid0090().runTests();
            new TestMid0091().runTests();
            new TestMid0092().runTests();
            new TestMid0093().runTests();
            new TestMid0105().runTests();
            new TestMid0106().runTests();
            new TestMid0107().runTests();
            new TestMid0108().runTests();
            new TestMid0109().runTests();
            new TestMid0110().runTests();
            new TestMid0111().runTests();
            new TestMid0113().runTests();
            new TestMid0120().runTests();
            new TestMid0121().runTests();
            new TestMid0122().runTests();
            new TestMid0123().runTests();
            new TestMid0124().runTests();
            new TestMid0125().runTests();
            new TestMid0126().runTests();
            new TestMid0127().runTests();
            new TestMid0128().runTests();
            new TestMid0129().runTests();
            new TestMid0130().runTests();
            new TestMid0131().runTests();
            new TestMid0132().runTests();
            new TestMid0133().runTests();
            new TestMid0140().runTests();
            new TestMid0150().runTests();
            new TestMid0151().runTests();
            new TestMid0152().runTests();
            new TestMid0153().runTests();
            new TestMid0154().runTests();
            new TestMid0155().runTests();
            new TestMid0156().runTests();
            new TestMid0157().runTests();
            new TestMid0200().runTests();
            new TestMid0210().runTests();
            new TestMid0211().runTests();
            new TestMid0212().runTests();
            new TestMid0213().runTests();
            new TestMid0214().runTests();
            new TestMid0215().runTests();
            new TestMid0216().runTests();
            new TestMid0217().runTests();
            new TestMid0218().runTests();
            new TestMid0219().runTests();
            new TestMid0220().runTests();
            new TestMid0221().runTests();
            new TestMid0222().runTests();
            new TestMid0223().runTests();
            new TestMid0224().runTests();
            new TestMid0225().runTests();
            new TestMid0240().runTests();
            new TestMid0241().runTests();
            new TestMid0242().runTests();
            new TestMid0243().runTests();
            new TestMid0244().runTests();
            new TestMid0245().runTests();
            new TestMid0250().runTests();
            new TestMid0251().runTests();
            new TestMid0252().runTests();
            new TestMid0253().runTests();
            new TestMid0254().runTests();
            new TestMid0255().runTests();
            new TestMid0260().runTests();
            new TestMid0261().runTests();
            new TestMid0262().runTests();
            new TestMid0263().runTests();
            new TestMid0264().runTests();
            new TestMid0265().runTests();
            new TestMid0270().runTests();
            new TestMid0300().runTests();
            new TestMid0301().runTests();
            new TestMid0400().runTests();
            new TestMid0401().runTests();
            new TestMid0402().runTests();
            new TestMid0403().runTests();
            new TestMid0410().runTests();
            new TestMid0411().runTests();
            new TestMid0420().runTests();
            new TestMid0421().runTests();
            new TestMid0422().runTests();
            new TestMid0423().runTests();
            new TestMid0500().runTests();
            new TestMid0501().runTests();
            new TestMid0502().runTests();
            new TestMid0503().runTests();
            new TestMid0504().runTests();
            new TestMid1201().runTests();
            new TestMid1202().runTests();
            new TestMid1203().runTests();
            new TestMid2504().runTests();
            new TestMid9999().runTests();
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Communication.Mid0001</para></remarks>
    public class TestMid0001 {
        public void runTests() {
            testRevision1();
            testRevision2();
            testRevision3();
            testRevision4();
            testRevision5();
        }
        public void setAllProperties(OpenProtocolInterpreter.Communication.Mid0001 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.Communication.Mid0001 mid = new OpenProtocolInterpreter.Communication.Mid0001(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision2() {
            OpenProtocolInterpreter.Communication.Mid0001 mid = new OpenProtocolInterpreter.Communication.Mid0001(2);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision3() {
            OpenProtocolInterpreter.Communication.Mid0001 mid = new OpenProtocolInterpreter.Communication.Mid0001(3);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision4() {
            OpenProtocolInterpreter.Communication.Mid0001 mid = new OpenProtocolInterpreter.Communication.Mid0001(4);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision5() {
            OpenProtocolInterpreter.Communication.Mid0001 mid = new OpenProtocolInterpreter.Communication.Mid0001(5);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Communication.Mid0002</para></remarks>
    public class TestMid0002 {
        public void runTests() {
            testRevision1();
            testRevision2();
            testRevision3();
            testRevision4();
            testRevision5();
            testRevision6();
        }
        public void setAllProperties(OpenProtocolInterpreter.Communication.Mid0002 mid) {
            mid.CellId = -1;
            mid.ChannelId = -1;
            mid.ControllerName = "TESTTESTTEST";
            mid.SupplierCode = "TESTTESTTEST";
            mid.OpenProtocolVersion = "TESTTESTTEST";
            mid.ControllerSoftwareVersion = "TESTTESTTEST";
            mid.ToolSoftwareVersion = "TESTTESTTEST";
            mid.RBUType = "TESTTESTTEST";
            mid.ControllerSerialNumber = "TESTTESTTEST";
            mid.SystemType = OpenProtocolInterpreter.SystemType.SYSTEM_TYPE_NOT_SET;
            mid.SystemSubType = OpenProtocolInterpreter.SystemSubType.NO_SUBTYPE_EXISTS;
            mid.SequenceNumberSupport = true;
            mid.LinkingHandlingSupport = true;
        }
        void testRevision1() {
            OpenProtocolInterpreter.Communication.Mid0002 mid = new OpenProtocolInterpreter.Communication.Mid0002(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision2() {
            OpenProtocolInterpreter.Communication.Mid0002 mid = new OpenProtocolInterpreter.Communication.Mid0002(2);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision3() {
            OpenProtocolInterpreter.Communication.Mid0002 mid = new OpenProtocolInterpreter.Communication.Mid0002(3);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision4() {
            OpenProtocolInterpreter.Communication.Mid0002 mid = new OpenProtocolInterpreter.Communication.Mid0002(4);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision5() {
            OpenProtocolInterpreter.Communication.Mid0002 mid = new OpenProtocolInterpreter.Communication.Mid0002(5);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision6() {
            OpenProtocolInterpreter.Communication.Mid0002 mid = new OpenProtocolInterpreter.Communication.Mid0002(6);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Communication.Mid0003</para></remarks>
    public class TestMid0003 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.Communication.Mid0003 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.Communication.Mid0003 mid = new OpenProtocolInterpreter.Communication.Mid0003(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Communication.Mid0004</para></remarks>
    public class TestMid0004 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.Communication.Mid0004 mid) {
            mid.FailedMid = -1;
            mid.ErrorCode = OpenProtocolInterpreter.Error.NO_ERROR;
        }
        void testRevision1() {
            OpenProtocolInterpreter.Communication.Mid0004 mid = new OpenProtocolInterpreter.Communication.Mid0004(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Communication.Mid0005</para></remarks>
    public class TestMid0005 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.Communication.Mid0005 mid) {
            mid.MidAccepted = -1;
        }
        void testRevision1() {
            OpenProtocolInterpreter.Communication.Mid0005 mid = new OpenProtocolInterpreter.Communication.Mid0005(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Communication.Mid0006</para></remarks>
    public class TestMid0006 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.Communication.Mid0006 mid) {
            mid.RequestedMid = "TESTTESTTEST";
            mid.WantedRevision = -1;
            mid.ExtraDataLength = -1;
            mid.ExtraData = "TESTTESTTEST";
        }
        void testRevision1() {
            OpenProtocolInterpreter.Communication.Mid0006 mid = new OpenProtocolInterpreter.Communication.Mid0006(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Communication.Mid0008</para></remarks>
    public class TestMid0008 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.Communication.Mid0008 mid) {
            mid.SubscriptionMid = "TESTTESTTEST";
            mid.WantedRevision = -1;
            mid.ExtraDataLength = -1;
            mid.ExtraData = "TESTTESTTEST";
        }
        void testRevision1() {
            OpenProtocolInterpreter.Communication.Mid0008 mid = new OpenProtocolInterpreter.Communication.Mid0008(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.ParameterSet.Mid0010</para></remarks>
    public class TestMid0010 {
        public void runTests() {
            testRevision1();
            testRevision2();
            testRevision3();
        }
        public void setAllProperties(OpenProtocolInterpreter.ParameterSet.Mid0010 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.ParameterSet.Mid0010 mid = new OpenProtocolInterpreter.ParameterSet.Mid0010(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision2() {
            OpenProtocolInterpreter.ParameterSet.Mid0010 mid = new OpenProtocolInterpreter.ParameterSet.Mid0010(2);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision3() {
            OpenProtocolInterpreter.ParameterSet.Mid0010 mid = new OpenProtocolInterpreter.ParameterSet.Mid0010(3);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.ParameterSet.Mid0011</para></remarks>
    public class TestMid0011 {
        public void runTests() {
            testRevision1();
        }
        // unhandled: SYSTEM.COLLECTIONS.GENERIC.LIST`1[[SYSTEM.INT32, MSCORLIB, VERSION=4.0.0.0, CULTURE=NEUTRAL, PUBLICKEYTOKEN=B77A5C561934E089]]
        public void setAllProperties(OpenProtocolInterpreter.ParameterSet.Mid0011 mid) {
            mid.TotalParameterSets = -1;
            mid.ParameterSets = null;
        }
        void testRevision1() {
            OpenProtocolInterpreter.ParameterSet.Mid0011 mid = new OpenProtocolInterpreter.ParameterSet.Mid0011(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.ParameterSet.Mid0012</para></remarks>
    public class TestMid0012 {
        public void runTests() {
            testRevision1();
            testRevision2();
            testRevision3();
            testRevision4();
        }
        public void setAllProperties(OpenProtocolInterpreter.ParameterSet.Mid0012 mid) {
            mid.ParameterSetId = -1;
            mid.ParameterSetFileVersion = -1;
        }
        void testRevision1() {
            OpenProtocolInterpreter.ParameterSet.Mid0012 mid = new OpenProtocolInterpreter.ParameterSet.Mid0012(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision2() {
            OpenProtocolInterpreter.ParameterSet.Mid0012 mid = new OpenProtocolInterpreter.ParameterSet.Mid0012(2);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision3() {
            OpenProtocolInterpreter.ParameterSet.Mid0012 mid = new OpenProtocolInterpreter.ParameterSet.Mid0012(3);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision4() {
            OpenProtocolInterpreter.ParameterSet.Mid0012 mid = new OpenProtocolInterpreter.ParameterSet.Mid0012(4);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.ParameterSet.Mid0013</para></remarks>
    public class TestMid0013 {
        public void runTests() {
            testRevision1();
            testRevision2();
        }
        public void setAllProperties(OpenProtocolInterpreter.ParameterSet.Mid0013 mid) {
            mid.ParameterSetId = -1;
            mid.ParameterSetName = "TESTTESTTEST";
            mid.RotationDirection = OpenProtocolInterpreter.RotationDirection.CLOCKWISE;
            mid.BatchSize = -1;
            mid.MinTorque = -1m;
            mid.MaxTorque = -1m;
            mid.TorqueFinalTarget = -1m;
            mid.MinAngle = -1;
            mid.MaxAngle = -1;
            mid.AngleFinalTarget = -1;
            mid.FirstTarget = -1m;
            mid.StartFinalAngle = -1m;
        }
        void testRevision1() {
            OpenProtocolInterpreter.ParameterSet.Mid0013 mid = new OpenProtocolInterpreter.ParameterSet.Mid0013(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision2() {
            OpenProtocolInterpreter.ParameterSet.Mid0013 mid = new OpenProtocolInterpreter.ParameterSet.Mid0013(2);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.ParameterSet.Mid0014</para></remarks>
    public class TestMid0014 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.ParameterSet.Mid0014 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.ParameterSet.Mid0014 mid = new OpenProtocolInterpreter.ParameterSet.Mid0014(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.ParameterSet.Mid0015</para></remarks>
    public class TestMid0015 {
        public void runTests() {
            testRevision1();
            testRevision2();
        }
        public void setAllProperties(OpenProtocolInterpreter.ParameterSet.Mid0015 mid) {
            mid.ParameterSetId = -1;
            mid.LastChangeInParameterSet = System.DateTime.MinValue;
            mid.ParameterSetName = "TESTTESTTEST";
            mid.RotationDirection = OpenProtocolInterpreter.RotationDirection.CLOCKWISE;
            mid.BatchSize = -1;
            mid.MinTorque = -1m;
            mid.MaxTorque = -1m;
            mid.TorqueFinalTarget = -1m;
            mid.MinAngle = -1;
            mid.MaxAngle = -1;
            mid.AngleFinalTarget = -1;
            mid.FirstTarget = -1m;
            mid.StartFinalAngle = -1m;
        }
        void testRevision1() {
            OpenProtocolInterpreter.ParameterSet.Mid0015 mid = new OpenProtocolInterpreter.ParameterSet.Mid0015(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision2() {
            OpenProtocolInterpreter.ParameterSet.Mid0015 mid = new OpenProtocolInterpreter.ParameterSet.Mid0015(2);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.ParameterSet.Mid0016</para></remarks>
    public class TestMid0016 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.ParameterSet.Mid0016 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.ParameterSet.Mid0016 mid = new OpenProtocolInterpreter.ParameterSet.Mid0016(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.ParameterSet.Mid0017</para></remarks>
    public class TestMid0017 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.ParameterSet.Mid0017 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.ParameterSet.Mid0017 mid = new OpenProtocolInterpreter.ParameterSet.Mid0017(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.ParameterSet.Mid0018</para></remarks>
    public class TestMid0018 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.ParameterSet.Mid0018 mid) {
            mid.ParameterSetId = -1;
        }
        void testRevision1() {
            OpenProtocolInterpreter.ParameterSet.Mid0018 mid = new OpenProtocolInterpreter.ParameterSet.Mid0018(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.ParameterSet.Mid0019</para></remarks>
    public class TestMid0019 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.ParameterSet.Mid0019 mid) {
            mid.ParameterSetId = -1;
            mid.BatchSize = -1;
        }
        void testRevision1() {
            OpenProtocolInterpreter.ParameterSet.Mid0019 mid = new OpenProtocolInterpreter.ParameterSet.Mid0019(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.ParameterSet.Mid0020</para></remarks>
    public class TestMid0020 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.ParameterSet.Mid0020 mid) {
            mid.ParameterSetId = -1;
        }
        void testRevision1() {
            OpenProtocolInterpreter.ParameterSet.Mid0020 mid = new OpenProtocolInterpreter.ParameterSet.Mid0020(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.ParameterSet.Mid0021</para></remarks>
    public class TestMid0021 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.ParameterSet.Mid0021 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.ParameterSet.Mid0021 mid = new OpenProtocolInterpreter.ParameterSet.Mid0021(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.ParameterSet.Mid0022</para></remarks>
    public class TestMid0022 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.ParameterSet.Mid0022 mid) {
            mid.RelayStatus = true;
        }
        void testRevision1() {
            OpenProtocolInterpreter.ParameterSet.Mid0022 mid = new OpenProtocolInterpreter.ParameterSet.Mid0022(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.ParameterSet.Mid0023</para></remarks>
    public class TestMid0023 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.ParameterSet.Mid0023 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.ParameterSet.Mid0023 mid = new OpenProtocolInterpreter.ParameterSet.Mid0023(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.ParameterSet.Mid0024</para></remarks>
    public class TestMid0024 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.ParameterSet.Mid0024 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.ParameterSet.Mid0024 mid = new OpenProtocolInterpreter.ParameterSet.Mid0024(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Job.Mid0030</para></remarks>
    public class TestMid0030 {
        public void runTests() {
            testRevision1();
            testRevision2();
        }
        public void setAllProperties(OpenProtocolInterpreter.Job.Mid0030 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.Job.Mid0030 mid = new OpenProtocolInterpreter.Job.Mid0030(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision2() {
            OpenProtocolInterpreter.Job.Mid0030 mid = new OpenProtocolInterpreter.Job.Mid0030(2);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Job.Mid0031</para></remarks>
    public class TestMid0031 {
        public void runTests() {
            testRevision1();
        }
        // unhandled: SYSTEM.COLLECTIONS.GENERIC.LIST`1[[SYSTEM.INT32, MSCORLIB, VERSION=4.0.0.0, CULTURE=NEUTRAL, PUBLICKEYTOKEN=B77A5C561934E089]]
        public void setAllProperties(OpenProtocolInterpreter.Job.Mid0031 mid) {
            mid.TotalJobs = -1;
            mid.JobIds = null;
        }
        void testRevision1() {
            OpenProtocolInterpreter.Job.Mid0031 mid = new OpenProtocolInterpreter.Job.Mid0031(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Job.Mid0032</para></remarks>
    public class TestMid0032 {
        public void runTests() {
            testRevision1();
            testRevision2();
            testRevision3();
        }
        public void setAllProperties(OpenProtocolInterpreter.Job.Mid0032 mid) {
            mid.JobId = -1;
        }
        void testRevision1() {
            OpenProtocolInterpreter.Job.Mid0032 mid = new OpenProtocolInterpreter.Job.Mid0032(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision2() {
            OpenProtocolInterpreter.Job.Mid0032 mid = new OpenProtocolInterpreter.Job.Mid0032(2);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision3() {
            OpenProtocolInterpreter.Job.Mid0032 mid = new OpenProtocolInterpreter.Job.Mid0032(3);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Job.Mid0033</para></remarks>
    public class TestMid0033 {
        public void runTests() {
            testRevision1();
            testRevision2();
            testRevision3();
        }
        // unhandled: SYSTEM.COLLECTIONS.GENERIC.LIST`1[[OPENPROTOCOLINTERPRETER.JOB.PARAMETERSET, RB_OPENPROTOCOLINTERPRETER, VERSION=3.0.3.0, CULTURE=NEUTRAL, PUBLICKEYTOKEN=NULL]]
        public void setAllProperties(OpenProtocolInterpreter.Job.Mid0033 mid) {
            mid.JobId = -1;
            mid.JobName = "TESTTESTTEST";
            mid.ForcedOrder = OpenProtocolInterpreter.ForcedOrder.FREE_ORDER;
            mid.MaxTimeForFirstTightening = -1;
            mid.MaxTimeToCompleteJob = -1;
            mid.JobBatchMode = OpenProtocolInterpreter.JobBatchMode.ONLY_OK_TIGHTENINGS;
            mid.LockAtJobDone = true;
            mid.UseLineControl = true;
            mid.RepeatJob = true;
            mid.ToolLoosening = OpenProtocolInterpreter.ToolLoosening.ENABLED;
            mid.Reserved = OpenProtocolInterpreter.Reserved.E;
            mid.NumberOfParameterSets = -1;
            mid.ParameterSetList = null;
        }
        void testRevision1() {
            OpenProtocolInterpreter.Job.Mid0033 mid = new OpenProtocolInterpreter.Job.Mid0033(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision2() {
            OpenProtocolInterpreter.Job.Mid0033 mid = new OpenProtocolInterpreter.Job.Mid0033(2);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision3() {
            OpenProtocolInterpreter.Job.Mid0033 mid = new OpenProtocolInterpreter.Job.Mid0033(3);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Job.Mid0034</para></remarks>
    public class TestMid0034 {
        public void runTests() {
            testRevision1();
            testRevision2();
            testRevision3();
            testRevision4();
        }
        public void setAllProperties(OpenProtocolInterpreter.Job.Mid0034 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.Job.Mid0034 mid = new OpenProtocolInterpreter.Job.Mid0034(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision2() {
            OpenProtocolInterpreter.Job.Mid0034 mid = new OpenProtocolInterpreter.Job.Mid0034(2);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision3() {
            OpenProtocolInterpreter.Job.Mid0034 mid = new OpenProtocolInterpreter.Job.Mid0034(3);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision4() {
            OpenProtocolInterpreter.Job.Mid0034 mid = new OpenProtocolInterpreter.Job.Mid0034(4);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Job.Mid0035</para></remarks>
    public class TestMid0035 {
        public void runTests() {
            testRevision1();
            testRevision2();
            testRevision3();
            testRevision4();
        }
        public void setAllProperties(OpenProtocolInterpreter.Job.Mid0035 mid) {
            mid.JobId = -1;
            mid.JobStatus = OpenProtocolInterpreter.JobStatus.NOT_COMPLETED;
            mid.JobBatchMode = OpenProtocolInterpreter.JobBatchMode.ONLY_OK_TIGHTENINGS;
            mid.JobBatchSize = -1;
            mid.JobBatchCounter = -1;
            mid.TimeStamp = System.DateTime.MinValue;
            mid.JobCurrentStep = -1;
            mid.JobTotalNumberOfSteps = -1;
            mid.JobStepType = -1;
            mid.JobTighteningStatus = OpenProtocolInterpreter.JobTighteningStatus.OFF;
        }
        void testRevision1() {
            OpenProtocolInterpreter.Job.Mid0035 mid = new OpenProtocolInterpreter.Job.Mid0035(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision2() {
            OpenProtocolInterpreter.Job.Mid0035 mid = new OpenProtocolInterpreter.Job.Mid0035(2);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision3() {
            OpenProtocolInterpreter.Job.Mid0035 mid = new OpenProtocolInterpreter.Job.Mid0035(3);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision4() {
            OpenProtocolInterpreter.Job.Mid0035 mid = new OpenProtocolInterpreter.Job.Mid0035(4);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Job.Mid0036</para></remarks>
    public class TestMid0036 {
        public void runTests() {
            testRevision1();
            testRevision2();
            testRevision3();
            testRevision4();
        }
        public void setAllProperties(OpenProtocolInterpreter.Job.Mid0036 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.Job.Mid0036 mid = new OpenProtocolInterpreter.Job.Mid0036(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision2() {
            OpenProtocolInterpreter.Job.Mid0036 mid = new OpenProtocolInterpreter.Job.Mid0036(2);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision3() {
            OpenProtocolInterpreter.Job.Mid0036 mid = new OpenProtocolInterpreter.Job.Mid0036(3);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision4() {
            OpenProtocolInterpreter.Job.Mid0036 mid = new OpenProtocolInterpreter.Job.Mid0036(4);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Job.Mid0037</para></remarks>
    public class TestMid0037 {
        public void runTests() {
            testRevision1();
            testRevision2();
            testRevision3();
            testRevision4();
        }
        public void setAllProperties(OpenProtocolInterpreter.Job.Mid0037 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.Job.Mid0037 mid = new OpenProtocolInterpreter.Job.Mid0037(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision2() {
            OpenProtocolInterpreter.Job.Mid0037 mid = new OpenProtocolInterpreter.Job.Mid0037(2);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision3() {
            OpenProtocolInterpreter.Job.Mid0037 mid = new OpenProtocolInterpreter.Job.Mid0037(3);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision4() {
            OpenProtocolInterpreter.Job.Mid0037 mid = new OpenProtocolInterpreter.Job.Mid0037(4);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Job.Mid0038</para></remarks>
    public class TestMid0038 {
        public void runTests() {
            testRevision1();
            testRevision2();
        }
        public void setAllProperties(OpenProtocolInterpreter.Job.Mid0038 mid) {
            mid.JobId = -1;
        }
        void testRevision1() {
            OpenProtocolInterpreter.Job.Mid0038 mid = new OpenProtocolInterpreter.Job.Mid0038(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision2() {
            OpenProtocolInterpreter.Job.Mid0038 mid = new OpenProtocolInterpreter.Job.Mid0038(2);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Job.Mid0039</para></remarks>
    public class TestMid0039 {
        public void runTests() {
            testRevision1();
            testRevision2();
        }
        public void setAllProperties(OpenProtocolInterpreter.Job.Mid0039 mid) {
            mid.JobId = -1;
        }
        void testRevision1() {
            OpenProtocolInterpreter.Job.Mid0039 mid = new OpenProtocolInterpreter.Job.Mid0039(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision2() {
            OpenProtocolInterpreter.Job.Mid0039 mid = new OpenProtocolInterpreter.Job.Mid0039(2);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Tool.Mid0040</para></remarks>
    public class TestMid0040 {
        public void runTests() {
            testRevision1();
            testRevision2();
            testRevision3();
            testRevision4();
            testRevision5();
        }
        public void setAllProperties(OpenProtocolInterpreter.Tool.Mid0040 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.Tool.Mid0040 mid = new OpenProtocolInterpreter.Tool.Mid0040(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision2() {
            OpenProtocolInterpreter.Tool.Mid0040 mid = new OpenProtocolInterpreter.Tool.Mid0040(2);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision3() {
            OpenProtocolInterpreter.Tool.Mid0040 mid = new OpenProtocolInterpreter.Tool.Mid0040(3);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision4() {
            OpenProtocolInterpreter.Tool.Mid0040 mid = new OpenProtocolInterpreter.Tool.Mid0040(4);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision5() {
            OpenProtocolInterpreter.Tool.Mid0040 mid = new OpenProtocolInterpreter.Tool.Mid0040(5);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Tool.Mid0041</para></remarks>
    public class TestMid0041 {
        public void runTests() {
            testRevision1();
            testRevision2();
            testRevision3();
            testRevision4();
            testRevision5();
        }
        // unhandled: OPENPROTOCOLINTERPRETER.TOOL.MID0041+OPENENDDATAS
        public void setAllProperties(OpenProtocolInterpreter.Tool.Mid0041 mid) {
            mid.ToolSerialNumber = "TESTTESTTEST";
            mid.ToolNumberOfTightenings = -1;
            mid.LastCalibrationDate = System.DateTime.MinValue;
            mid.ControllerSerialNumber = "TESTTESTTEST";
            mid.CalibrationValue = -1m;
            mid.LastServiceDate = System.DateTime.MinValue;
            mid.TighteningsSinceService = -1;
            mid.ToolType = OpenProtocolInterpreter.ToolType.NO_TOOL;
            mid.MotorSize = -1;
            mid.OpenEndData = null;
            mid.ControllerSoftwareVersion = "TESTTESTTEST";
            mid.ToolMaxTorque = -1m;
            mid.GearRatio = -1m;
            mid.ToolFullSpeed = -1m;
            mid.PrimaryTool = OpenProtocolInterpreter.PrimaryTool.CABLE;
            mid.ToolModel = "TESTTESTTEST";
        }
        void testRevision1() {
            OpenProtocolInterpreter.Tool.Mid0041 mid = new OpenProtocolInterpreter.Tool.Mid0041(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision2() {
            OpenProtocolInterpreter.Tool.Mid0041 mid = new OpenProtocolInterpreter.Tool.Mid0041(2);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision3() {
            OpenProtocolInterpreter.Tool.Mid0041 mid = new OpenProtocolInterpreter.Tool.Mid0041(3);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision4() {
            OpenProtocolInterpreter.Tool.Mid0041 mid = new OpenProtocolInterpreter.Tool.Mid0041(4);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision5() {
            OpenProtocolInterpreter.Tool.Mid0041 mid = new OpenProtocolInterpreter.Tool.Mid0041(5);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Tool.Mid0042</para></remarks>
    public class TestMid0042 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.Tool.Mid0042 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.Tool.Mid0042 mid = new OpenProtocolInterpreter.Tool.Mid0042(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Tool.Mid0043</para></remarks>
    public class TestMid0043 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.Tool.Mid0043 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.Tool.Mid0043 mid = new OpenProtocolInterpreter.Tool.Mid0043(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Tool.Mid0044</para></remarks>
    public class TestMid0044 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.Tool.Mid0044 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.Tool.Mid0044 mid = new OpenProtocolInterpreter.Tool.Mid0044(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Tool.Mid0045</para></remarks>
    public class TestMid0045 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.Tool.Mid0045 mid) {
            mid.CalibrationValueUnit = OpenProtocolInterpreter.CalibrationUnit.NM;
            mid.CalibrationValue = -1m;
        }
        void testRevision1() {
            OpenProtocolInterpreter.Tool.Mid0045 mid = new OpenProtocolInterpreter.Tool.Mid0045(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Tool.Mid0046</para></remarks>
    public class TestMid0046 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.Tool.Mid0046 mid) {
            mid.PrimaryTool = OpenProtocolInterpreter.PrimaryTool.CABLE;
        }
        void testRevision1() {
            OpenProtocolInterpreter.Tool.Mid0046 mid = new OpenProtocolInterpreter.Tool.Mid0046(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Tool.Mid0047</para></remarks>
    public class TestMid0047 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.Tool.Mid0047 mid) {
            mid.PairingHandlingType = OpenProtocolInterpreter.PairingHandlingType.START_PAIRING;
        }
        void testRevision1() {
            OpenProtocolInterpreter.Tool.Mid0047 mid = new OpenProtocolInterpreter.Tool.Mid0047(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Tool.Mid0048</para></remarks>
    public class TestMid0048 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.Tool.Mid0048 mid) {
            mid.PairingStatus = OpenProtocolInterpreter.PairingStatus.UNDEFINED;
            mid.TimeStamp = System.DateTime.MinValue;
        }
        void testRevision1() {
            OpenProtocolInterpreter.Tool.Mid0048 mid = new OpenProtocolInterpreter.Tool.Mid0048(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Vin.Mid0050</para></remarks>
    public class TestMid0050 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.Vin.Mid0050 mid) {
            mid.VinNumber = "TESTTESTTEST";
        }
        void testRevision1() {
            OpenProtocolInterpreter.Vin.Mid0050 mid = new OpenProtocolInterpreter.Vin.Mid0050(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Vin.Mid0051</para></remarks>
    public class TestMid0051 {
        public void runTests() {
            testRevision1();
            testRevision2();
        }
        public void setAllProperties(OpenProtocolInterpreter.Vin.Mid0051 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.Vin.Mid0051 mid = new OpenProtocolInterpreter.Vin.Mid0051(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision2() {
            OpenProtocolInterpreter.Vin.Mid0051 mid = new OpenProtocolInterpreter.Vin.Mid0051(2);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Vin.Mid0052</para></remarks>
    public class TestMid0052 {
        public void runTests() {
            testRevision1();
            testRevision2();
        }
        public void setAllProperties(OpenProtocolInterpreter.Vin.Mid0052 mid) {
            mid.VinNumber = "TESTTESTTEST";
            mid.IdentifierResultPart2 = "TESTTESTTEST";
            mid.IdentifierResultPart3 = "TESTTESTTEST";
            mid.IdentifierResultPart4 = "TESTTESTTEST";
        }
        void testRevision1() {
            OpenProtocolInterpreter.Vin.Mid0052 mid = new OpenProtocolInterpreter.Vin.Mid0052(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision2() {
            OpenProtocolInterpreter.Vin.Mid0052 mid = new OpenProtocolInterpreter.Vin.Mid0052(2);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Vin.Mid0053</para></remarks>
    public class TestMid0053 {
        public void runTests() {
            testRevision1();
            testRevision2();
        }
        public void setAllProperties(OpenProtocolInterpreter.Vin.Mid0053 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.Vin.Mid0053 mid = new OpenProtocolInterpreter.Vin.Mid0053(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision2() {
            OpenProtocolInterpreter.Vin.Mid0053 mid = new OpenProtocolInterpreter.Vin.Mid0053(2);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Vin.Mid0054</para></remarks>
    public class TestMid0054 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.Vin.Mid0054 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.Vin.Mid0054 mid = new OpenProtocolInterpreter.Vin.Mid0054(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Tightening.Mid0060</para></remarks>
    public class TestMid0060 {
        public void runTests() {
            testRevision1();
            testRevision2();
            testRevision3();
            testRevision4();
            testRevision5();
            testRevision6();
            testRevision7();
        }
        public void setAllProperties(OpenProtocolInterpreter.Tightening.Mid0060 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.Tightening.Mid0060 mid = new OpenProtocolInterpreter.Tightening.Mid0060(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision2() {
            OpenProtocolInterpreter.Tightening.Mid0060 mid = new OpenProtocolInterpreter.Tightening.Mid0060(2);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision3() {
            OpenProtocolInterpreter.Tightening.Mid0060 mid = new OpenProtocolInterpreter.Tightening.Mid0060(3);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision4() {
            OpenProtocolInterpreter.Tightening.Mid0060 mid = new OpenProtocolInterpreter.Tightening.Mid0060(4);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision5() {
            OpenProtocolInterpreter.Tightening.Mid0060 mid = new OpenProtocolInterpreter.Tightening.Mid0060(5);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision6() {
            OpenProtocolInterpreter.Tightening.Mid0060 mid = new OpenProtocolInterpreter.Tightening.Mid0060(6);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision7() {
            OpenProtocolInterpreter.Tightening.Mid0060 mid = new OpenProtocolInterpreter.Tightening.Mid0060(7);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Tightening.Mid0061</para></remarks>
    public class TestMid0061 {
        public void runTests() {
            testRevision1();
            testRevision2();
            testRevision3();
            testRevision4();
            testRevision5();
            testRevision6();
            testRevision7();
        }
        // unhandled: OPENPROTOCOLINTERPRETER.TIGHTENING.STRATEGYOPTIONS
        // unhandled: OPENPROTOCOLINTERPRETER.TIGHTENING.TIGHTENINGERRORSTATUS
        // unhandled: OPENPROTOCOLINTERPRETER.TIGHTENING.TIGHTENINGERRORSTATUS2
        // unhandled: SYSTEM.COLLECTIONS.GENERIC.LIST`1[[OPENPROTOCOLINTERPRETER.TIGHTENING.STAGERESULT, RB_OPENPROTOCOLINTERPRETER, VERSION=3.0.3.0, CULTURE=NEUTRAL, PUBLICKEYTOKEN=NULL]]
        public void setAllProperties(OpenProtocolInterpreter.Tightening.Mid0061 mid) {
            mid.CellId = -1;
            mid.ChannelId = -1;
            mid.TorqueControllerName = "TESTTESTTEST";
            mid.VinNumber = "TESTTESTTEST";
            mid.JobId = -1;
            mid.ParameterSetId = -1;
            mid.BatchSize = -1;
            mid.BatchCounter = -1;
            mid.TighteningStatus = true;
            mid.TorqueStatus = OpenProtocolInterpreter.TighteningValueStatus.LOW;
            mid.AngleStatus = OpenProtocolInterpreter.TighteningValueStatus.LOW;
            mid.TorqueMinLimit = -1m;
            mid.TorqueMaxLimit = -1m;
            mid.TorqueFinalTarget = -1m;
            mid.Torque = -1m;
            mid.AngleMinLimit = -1;
            mid.AngleMaxLimit = -1;
            mid.AngleFinalTarget = -1;
            mid.Angle = -1;
            mid.Timestamp = System.DateTime.MinValue;
            mid.LastChangeInParameterSet = System.DateTime.MinValue;
            mid.BatchStatus = OpenProtocolInterpreter.BatchStatus.NOK;
            mid.TighteningId = -1;
            mid.Strategy = OpenProtocolInterpreter.Strategy.TORQUE_CONTROL;
            mid.StrategyOptions = null;
            mid.RundownAngleStatus = OpenProtocolInterpreter.TighteningValueStatus.LOW;
            mid.CurrentMonitoringStatus = OpenProtocolInterpreter.TighteningValueStatus.LOW;
            mid.SelftapStatus = OpenProtocolInterpreter.TighteningValueStatus.LOW;
            mid.PrevailTorqueMonitoringStatus = OpenProtocolInterpreter.TighteningValueStatus.LOW;
            mid.PrevailTorqueCompensateStatus = OpenProtocolInterpreter.TighteningValueStatus.LOW;
            mid.TighteningErrorStatus = null;
            mid.RundownAngleMin = -1;
            mid.RundownAngleMax = -1;
            mid.RundownAngle = -1;
            mid.CurrentMonitoringMin = -1;
            mid.CurrentMonitoringMax = -1;
            mid.CurrentMonitoringValue = -1;
            mid.SelftapMin = -1m;
            mid.SelftapMax = -1m;
            mid.SelftapTorque = -1m;
            mid.PrevailTorqueMonitoringMin = -1m;
            mid.PrevailTorqueMonitoringMax = -1m;
            mid.PrevailTorque = -1m;
            mid.JobSequenceNumber = -1;
            mid.SyncTighteningId = -1;
            mid.ToolSerialNumber = "TESTTESTTEST";
            mid.ParameterSetName = "TESTTESTTEST";
            mid.TorqueValuesUnit = OpenProtocolInterpreter.TorqueValuesUnit.NM;
            mid.ResultType = OpenProtocolInterpreter.ResultType.TIGHTENING;
            mid.IdentifierResultPart2 = "TESTTESTTEST";
            mid.IdentifierResultPart3 = "TESTTESTTEST";
            mid.IdentifierResultPart4 = "TESTTESTTEST";
            mid.CustomerTighteningErrorCode = "TESTTESTTEST";
            mid.PrevailTorqueCompensateValue = -1m;
            mid.TighteningErrorStatus2 = null;
            mid.CompensatedAngle = -1m;
            mid.FinalAngleDecimal = -1m;
            mid.NumberOfStagesInMultistage = -1;
            mid.NumberOfStageResults = -1;
            mid.StageResults = null;
        }
        void testRevision1() {
            OpenProtocolInterpreter.Tightening.Mid0061 mid = new OpenProtocolInterpreter.Tightening.Mid0061(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision2() {
            OpenProtocolInterpreter.Tightening.Mid0061 mid = new OpenProtocolInterpreter.Tightening.Mid0061(2);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision3() {
            OpenProtocolInterpreter.Tightening.Mid0061 mid = new OpenProtocolInterpreter.Tightening.Mid0061(3);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision4() {
            OpenProtocolInterpreter.Tightening.Mid0061 mid = new OpenProtocolInterpreter.Tightening.Mid0061(4);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision5() {
            OpenProtocolInterpreter.Tightening.Mid0061 mid = new OpenProtocolInterpreter.Tightening.Mid0061(5);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision6() {
            OpenProtocolInterpreter.Tightening.Mid0061 mid = new OpenProtocolInterpreter.Tightening.Mid0061(6);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision7() {
            OpenProtocolInterpreter.Tightening.Mid0061 mid = new OpenProtocolInterpreter.Tightening.Mid0061(7);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Tightening.Mid0062</para></remarks>
    public class TestMid0062 {
        public void runTests() {
            testRevision1();
            testRevision2();
            testRevision3();
            testRevision4();
            testRevision5();
            testRevision6();
        }
        public void setAllProperties(OpenProtocolInterpreter.Tightening.Mid0062 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.Tightening.Mid0062 mid = new OpenProtocolInterpreter.Tightening.Mid0062(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision2() {
            OpenProtocolInterpreter.Tightening.Mid0062 mid = new OpenProtocolInterpreter.Tightening.Mid0062(2);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision3() {
            OpenProtocolInterpreter.Tightening.Mid0062 mid = new OpenProtocolInterpreter.Tightening.Mid0062(3);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision4() {
            OpenProtocolInterpreter.Tightening.Mid0062 mid = new OpenProtocolInterpreter.Tightening.Mid0062(4);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision5() {
            OpenProtocolInterpreter.Tightening.Mid0062 mid = new OpenProtocolInterpreter.Tightening.Mid0062(5);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision6() {
            OpenProtocolInterpreter.Tightening.Mid0062 mid = new OpenProtocolInterpreter.Tightening.Mid0062(6);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Tightening.Mid0063</para></remarks>
    public class TestMid0063 {
        public void runTests() {
            testRevision1();
            testRevision2();
            testRevision3();
            testRevision4();
            testRevision5();
            testRevision6();
        }
        public void setAllProperties(OpenProtocolInterpreter.Tightening.Mid0063 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.Tightening.Mid0063 mid = new OpenProtocolInterpreter.Tightening.Mid0063(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision2() {
            OpenProtocolInterpreter.Tightening.Mid0063 mid = new OpenProtocolInterpreter.Tightening.Mid0063(2);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision3() {
            OpenProtocolInterpreter.Tightening.Mid0063 mid = new OpenProtocolInterpreter.Tightening.Mid0063(3);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision4() {
            OpenProtocolInterpreter.Tightening.Mid0063 mid = new OpenProtocolInterpreter.Tightening.Mid0063(4);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision5() {
            OpenProtocolInterpreter.Tightening.Mid0063 mid = new OpenProtocolInterpreter.Tightening.Mid0063(5);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision6() {
            OpenProtocolInterpreter.Tightening.Mid0063 mid = new OpenProtocolInterpreter.Tightening.Mid0063(6);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Tightening.Mid0064</para></remarks>
    public class TestMid0064 {
        public void runTests() {
            testRevision1();
            testRevision2();
            testRevision3();
            testRevision4();
            testRevision5();
            testRevision6();
        }
        public void setAllProperties(OpenProtocolInterpreter.Tightening.Mid0064 mid) {
            mid.TighteningId = -1;
        }
        void testRevision1() {
            OpenProtocolInterpreter.Tightening.Mid0064 mid = new OpenProtocolInterpreter.Tightening.Mid0064(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision2() {
            OpenProtocolInterpreter.Tightening.Mid0064 mid = new OpenProtocolInterpreter.Tightening.Mid0064(2);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision3() {
            OpenProtocolInterpreter.Tightening.Mid0064 mid = new OpenProtocolInterpreter.Tightening.Mid0064(3);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision4() {
            OpenProtocolInterpreter.Tightening.Mid0064 mid = new OpenProtocolInterpreter.Tightening.Mid0064(4);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision5() {
            OpenProtocolInterpreter.Tightening.Mid0064 mid = new OpenProtocolInterpreter.Tightening.Mid0064(5);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision6() {
            OpenProtocolInterpreter.Tightening.Mid0064 mid = new OpenProtocolInterpreter.Tightening.Mid0064(6);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Tightening.Mid0065</para></remarks>
    public class TestMid0065 {
        public void runTests() {
            testRevision1();
            testRevision2();
            testRevision3();
            testRevision4();
            testRevision5();
            testRevision6();
        }
        // unhandled: OPENPROTOCOLINTERPRETER.TIGHTENING.STRATEGYOPTIONS
        // unhandled: OPENPROTOCOLINTERPRETER.TIGHTENING.TIGHTENINGERRORSTATUS
        // unhandled: OPENPROTOCOLINTERPRETER.TIGHTENING.TIGHTENINGERRORSTATUS2
        public void setAllProperties(OpenProtocolInterpreter.Tightening.Mid0065 mid) {
            mid.TighteningId = -1;
            mid.VinNumber = "TESTTESTTEST";
            mid.ParameterSetId = -1;
            mid.BatchCounter = -1;
            mid.TighteningStatus = true;
            mid.TorqueStatus = OpenProtocolInterpreter.TighteningValueStatus.LOW;
            mid.AngleStatus = OpenProtocolInterpreter.TighteningValueStatus.LOW;
            mid.Torque = -1m;
            mid.Angle = -1;
            mid.Timestamp = System.DateTime.MinValue;
            mid.BatchStatus = OpenProtocolInterpreter.BatchStatus.NOK;
            mid.JobId = -1;
            mid.Strategy = OpenProtocolInterpreter.Strategy.TORQUE_CONTROL;
            mid.StrategyOptions = null;
            mid.BatchSize = -1;
            mid.RundownAngleStatus = OpenProtocolInterpreter.TighteningValueStatus.LOW;
            mid.CurrentMonitoringStatus = OpenProtocolInterpreter.TighteningValueStatus.LOW;
            mid.SelftapStatus = OpenProtocolInterpreter.TighteningValueStatus.LOW;
            mid.PrevailTorqueMonitoringStatus = OpenProtocolInterpreter.TighteningValueStatus.LOW;
            mid.PrevailTorqueCompensateStatus = OpenProtocolInterpreter.TighteningValueStatus.LOW;
            mid.TighteningErrorStatus = null;
            mid.RundownAngle = -1;
            mid.CurrentMonitoringValue = -1;
            mid.SelftapTorque = -1m;
            mid.PrevailTorque = -1m;
            mid.JobSequenceNumber = -1;
            mid.SyncTighteningId = -1;
            mid.ToolSerialNumber = "TESTTESTTEST";
            mid.TorqueValuesUnit = OpenProtocolInterpreter.TorqueValuesUnit.NM;
            mid.ResultType = OpenProtocolInterpreter.ResultType.TIGHTENING;
            mid.IdentifierResultPart2 = "TESTTESTTEST";
            mid.IdentifierResultPart3 = "TESTTESTTEST";
            mid.IdentifierResultPart4 = "TESTTESTTEST";
            mid.CustomerTighteningErrorCode = "TESTTESTTEST";
            mid.PrevailTorqueCompensateValue = -1m;
            mid.TighteningErrorStatus2 = null;
        }
        void testRevision1() {
            OpenProtocolInterpreter.Tightening.Mid0065 mid = new OpenProtocolInterpreter.Tightening.Mid0065(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision2() {
            OpenProtocolInterpreter.Tightening.Mid0065 mid = new OpenProtocolInterpreter.Tightening.Mid0065(2);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision3() {
            OpenProtocolInterpreter.Tightening.Mid0065 mid = new OpenProtocolInterpreter.Tightening.Mid0065(3);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision4() {
            OpenProtocolInterpreter.Tightening.Mid0065 mid = new OpenProtocolInterpreter.Tightening.Mid0065(4);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision5() {
            OpenProtocolInterpreter.Tightening.Mid0065 mid = new OpenProtocolInterpreter.Tightening.Mid0065(5);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision6() {
            OpenProtocolInterpreter.Tightening.Mid0065 mid = new OpenProtocolInterpreter.Tightening.Mid0065(6);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Alarm.Mid0070</para></remarks>
    public class TestMid0070 {
        public void runTests() {
            testRevision1();
            testRevision2();
        }
        public void setAllProperties(OpenProtocolInterpreter.Alarm.Mid0070 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.Alarm.Mid0070 mid = new OpenProtocolInterpreter.Alarm.Mid0070(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision2() {
            OpenProtocolInterpreter.Alarm.Mid0070 mid = new OpenProtocolInterpreter.Alarm.Mid0070(2);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Alarm.Mid0071</para></remarks>
    public class TestMid0071 {
        public void runTests() {
            testRevision1();
            testRevision2();
        }
        public void setAllProperties(OpenProtocolInterpreter.Alarm.Mid0071 mid) {
            mid.ErrorCode = "TESTTESTTEST";
            mid.ControllerReadyStatus = true;
            mid.ToolReadyStatus = true;
            mid.Time = System.DateTime.MinValue;
            mid.AlarmText = "TESTTESTTEST";
        }
        void testRevision1() {
            OpenProtocolInterpreter.Alarm.Mid0071 mid = new OpenProtocolInterpreter.Alarm.Mid0071(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision2() {
            OpenProtocolInterpreter.Alarm.Mid0071 mid = new OpenProtocolInterpreter.Alarm.Mid0071(2);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Alarm.Mid0072</para></remarks>
    public class TestMid0072 {
        public void runTests() {
            testRevision1();
            testRevision2();
        }
        public void setAllProperties(OpenProtocolInterpreter.Alarm.Mid0072 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.Alarm.Mid0072 mid = new OpenProtocolInterpreter.Alarm.Mid0072(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision2() {
            OpenProtocolInterpreter.Alarm.Mid0072 mid = new OpenProtocolInterpreter.Alarm.Mid0072(2);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Alarm.Mid0073</para></remarks>
    public class TestMid0073 {
        public void runTests() {
            testRevision1();
            testRevision2();
        }
        public void setAllProperties(OpenProtocolInterpreter.Alarm.Mid0073 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.Alarm.Mid0073 mid = new OpenProtocolInterpreter.Alarm.Mid0073(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision2() {
            OpenProtocolInterpreter.Alarm.Mid0073 mid = new OpenProtocolInterpreter.Alarm.Mid0073(2);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Alarm.Mid0074</para></remarks>
    public class TestMid0074 {
        public void runTests() {
            testRevision1();
            testRevision2();
        }
        public void setAllProperties(OpenProtocolInterpreter.Alarm.Mid0074 mid) {
            mid.ErrorCode = "TESTTESTTEST";
        }
        void testRevision1() {
            OpenProtocolInterpreter.Alarm.Mid0074 mid = new OpenProtocolInterpreter.Alarm.Mid0074(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision2() {
            OpenProtocolInterpreter.Alarm.Mid0074 mid = new OpenProtocolInterpreter.Alarm.Mid0074(2);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Alarm.Mid0075</para></remarks>
    public class TestMid0075 {
        public void runTests() {
            testRevision1();
            testRevision2();
        }
        public void setAllProperties(OpenProtocolInterpreter.Alarm.Mid0075 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.Alarm.Mid0075 mid = new OpenProtocolInterpreter.Alarm.Mid0075(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision2() {
            OpenProtocolInterpreter.Alarm.Mid0075 mid = new OpenProtocolInterpreter.Alarm.Mid0075(2);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Alarm.Mid0076</para></remarks>
    public class TestMid0076 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.Alarm.Mid0076 mid) {
            mid.AlarmStatus = true;
            mid.ErrorCode = "TESTTESTTEST";
            mid.ControllerReadyStatus = true;
            mid.ToolReadyStatus = true;
            mid.Time = System.DateTime.MinValue;
        }
        void testRevision1() {
            OpenProtocolInterpreter.Alarm.Mid0076 mid = new OpenProtocolInterpreter.Alarm.Mid0076(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Alarm.Mid0077</para></remarks>
    public class TestMid0077 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.Alarm.Mid0077 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.Alarm.Mid0077 mid = new OpenProtocolInterpreter.Alarm.Mid0077(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Alarm.Mid0078</para></remarks>
    public class TestMid0078 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.Alarm.Mid0078 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.Alarm.Mid0078 mid = new OpenProtocolInterpreter.Alarm.Mid0078(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Time.Mid0080</para></remarks>
    public class TestMid0080 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.Time.Mid0080 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.Time.Mid0080 mid = new OpenProtocolInterpreter.Time.Mid0080(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Time.Mid0081</para></remarks>
    public class TestMid0081 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.Time.Mid0081 mid) {
            mid.Time = System.DateTime.MinValue;
        }
        void testRevision1() {
            OpenProtocolInterpreter.Time.Mid0081 mid = new OpenProtocolInterpreter.Time.Mid0081(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Time.Mid0082</para></remarks>
    public class TestMid0082 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.Time.Mid0082 mid) {
            mid.Time = System.DateTime.MinValue;
        }
        void testRevision1() {
            OpenProtocolInterpreter.Time.Mid0082 mid = new OpenProtocolInterpreter.Time.Mid0082(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.MultiSpindle.Mid0090</para></remarks>
    public class TestMid0090 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.MultiSpindle.Mid0090 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.MultiSpindle.Mid0090 mid = new OpenProtocolInterpreter.MultiSpindle.Mid0090(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.MultiSpindle.Mid0091</para></remarks>
    public class TestMid0091 {
        public void runTests() {
            testRevision1();
        }
        // unhandled: SYSTEM.COLLECTIONS.GENERIC.LIST`1[[OPENPROTOCOLINTERPRETER.MULTISPINDLE.SPINDLESTATUS, RB_OPENPROTOCOLINTERPRETER, VERSION=3.0.3.0, CULTURE=NEUTRAL, PUBLICKEYTOKEN=NULL]]
        public void setAllProperties(OpenProtocolInterpreter.MultiSpindle.Mid0091 mid) {
            mid.NumberOfSpindles = -1;
            mid.SyncTighteningId = -1;
            mid.Time = System.DateTime.MinValue;
            mid.SyncOverallStatus = true;
            mid.SpindlesStatus = null;
        }
        void testRevision1() {
            OpenProtocolInterpreter.MultiSpindle.Mid0091 mid = new OpenProtocolInterpreter.MultiSpindle.Mid0091(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.MultiSpindle.Mid0092</para></remarks>
    public class TestMid0092 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.MultiSpindle.Mid0092 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.MultiSpindle.Mid0092 mid = new OpenProtocolInterpreter.MultiSpindle.Mid0092(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.MultiSpindle.Mid0093</para></remarks>
    public class TestMid0093 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.MultiSpindle.Mid0093 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.MultiSpindle.Mid0093 mid = new OpenProtocolInterpreter.MultiSpindle.Mid0093(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.PowerMACS.Mid0105</para></remarks>
    public class TestMid0105 {
        public void runTests() {
            testRevision1();
            testRevision2();
            testRevision3();
            testRevision4();
        }
        public void setAllProperties(OpenProtocolInterpreter.PowerMACS.Mid0105 mid) {
            mid.DataNumberSystem = -1;
            mid.SendOnlyNewData = true;
        }
        void testRevision1() {
            OpenProtocolInterpreter.PowerMACS.Mid0105 mid = new OpenProtocolInterpreter.PowerMACS.Mid0105(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision2() {
            OpenProtocolInterpreter.PowerMACS.Mid0105 mid = new OpenProtocolInterpreter.PowerMACS.Mid0105(2);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision3() {
            OpenProtocolInterpreter.PowerMACS.Mid0105 mid = new OpenProtocolInterpreter.PowerMACS.Mid0105(3);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision4() {
            OpenProtocolInterpreter.PowerMACS.Mid0105 mid = new OpenProtocolInterpreter.PowerMACS.Mid0105(4);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.PowerMACS.Mid0106</para></remarks>
    public class TestMid0106 {
        public void runTests() {
            testRevision1();
            testRevision2();
            testRevision3();
            testRevision4();
        }
        // unhandled: SYSTEM.COLLECTIONS.GENERIC.LIST`1[[OPENPROTOCOLINTERPRETER.POWERMACS.BOLTDATA, RB_OPENPROTOCOLINTERPRETER, VERSION=3.0.3.0, CULTURE=NEUTRAL, PUBLICKEYTOKEN=NULL]]
        // unhandled: SYSTEM.COLLECTIONS.GENERIC.LIST`1[[OPENPROTOCOLINTERPRETER.POWERMACS.SPECIALVALUE, RB_OPENPROTOCOLINTERPRETER, VERSION=3.0.3.0, CULTURE=NEUTRAL, PUBLICKEYTOKEN=NULL]]
        public void setAllProperties(OpenProtocolInterpreter.PowerMACS.Mid0106 mid) {
            mid.TotalNumberOfMessages = -1;
            mid.MessageNumber = -1;
            mid.DataNumberSystem = -1;
            mid.StationNumber = -1;
            mid.StationName = "TESTTESTTEST";
            mid.Time = System.DateTime.MinValue;
            mid.ModeNumber = -1;
            mid.ModeName = "TESTTESTTEST";
            mid.SimpleStatus = true;
            mid.PMStatus = OpenProtocolInterpreter.PowerMacsStatus.OK;
            mid.WpId = "TESTTESTTEST";
            mid.NumberOfBolts = -1;
            mid.BoltsData = null;
            mid.TotalSpecialValues = -1;
            mid.SpecialValues = null;
            mid.SystemSubType = OpenProtocolInterpreter.SystemSubType.NO_SUBTYPE_EXISTS;
        }
        void testRevision1() {
            OpenProtocolInterpreter.PowerMACS.Mid0106 mid = new OpenProtocolInterpreter.PowerMACS.Mid0106(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision2() {
            OpenProtocolInterpreter.PowerMACS.Mid0106 mid = new OpenProtocolInterpreter.PowerMACS.Mid0106(2);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision3() {
            OpenProtocolInterpreter.PowerMACS.Mid0106 mid = new OpenProtocolInterpreter.PowerMACS.Mid0106(3);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision4() {
            OpenProtocolInterpreter.PowerMACS.Mid0106 mid = new OpenProtocolInterpreter.PowerMACS.Mid0106(4);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.PowerMACS.Mid0107</para></remarks>
    public class TestMid0107 {
        public void runTests() {
            testRevision1();
            testRevision2();
            testRevision3();
            testRevision4();
        }
        // unhandled: SYSTEM.COLLECTIONS.GENERIC.LIST`1[[OPENPROTOCOLINTERPRETER.POWERMACS.BOLTRESULT, RB_OPENPROTOCOLINTERPRETER, VERSION=3.0.3.0, CULTURE=NEUTRAL, PUBLICKEYTOKEN=NULL]]
        // unhandled: SYSTEM.COLLECTIONS.GENERIC.LIST`1[[OPENPROTOCOLINTERPRETER.POWERMACS.STEPRESULT, RB_OPENPROTOCOLINTERPRETER, VERSION=3.0.3.0, CULTURE=NEUTRAL, PUBLICKEYTOKEN=NULL]]
        // unhandled: SYSTEM.COLLECTIONS.GENERIC.LIST`1[[OPENPROTOCOLINTERPRETER.POWERMACS.SPECIALVALUE, RB_OPENPROTOCOLINTERPRETER, VERSION=3.0.3.0, CULTURE=NEUTRAL, PUBLICKEYTOKEN=NULL]]
        public void setAllProperties(OpenProtocolInterpreter.PowerMACS.Mid0107 mid) {
            mid.TotalNumberOfMessages = -1;
            mid.MessageNumber = -1;
            mid.DataNumberSystem = -1;
            mid.StationNumber = -1;
            mid.Time = System.DateTime.MinValue;
            mid.BoltNumber = -1;
            mid.BoltName = "TESTTESTTEST";
            mid.ProgramName = "TESTTESTTEST";
            mid.PowerMacsStatus = OpenProtocolInterpreter.PowerMACS.Mid0107.PowerMacsStatuses.OK;
            mid.Errors = "TESTTESTTEST";
            mid.CustomerErrorCode = "TESTTESTTEST";
            mid.NumberOfBoltResults = -1;
            mid.BoltResults = null;
            mid.NumberOfStepResults = -1;
            mid.AllStepDataSent = true;
            mid.StepResults = null;
            mid.NumberOfSpecialValues = -1;
            mid.SpecialValues = null;
        }
        void testRevision1() {
            OpenProtocolInterpreter.PowerMACS.Mid0107 mid = new OpenProtocolInterpreter.PowerMACS.Mid0107(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision2() {
            OpenProtocolInterpreter.PowerMACS.Mid0107 mid = new OpenProtocolInterpreter.PowerMACS.Mid0107(2);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision3() {
            OpenProtocolInterpreter.PowerMACS.Mid0107 mid = new OpenProtocolInterpreter.PowerMACS.Mid0107(3);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision4() {
            OpenProtocolInterpreter.PowerMACS.Mid0107 mid = new OpenProtocolInterpreter.PowerMACS.Mid0107(4);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.PowerMACS.Mid0108</para></remarks>
    public class TestMid0108 {
        public void runTests() {
            testRevision1();
            testRevision2();
            testRevision3();
            testRevision4();
        }
        public void setAllProperties(OpenProtocolInterpreter.PowerMACS.Mid0108 mid) {
            mid.BoltData = true;
        }
        void testRevision1() {
            OpenProtocolInterpreter.PowerMACS.Mid0108 mid = new OpenProtocolInterpreter.PowerMACS.Mid0108(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision2() {
            OpenProtocolInterpreter.PowerMACS.Mid0108 mid = new OpenProtocolInterpreter.PowerMACS.Mid0108(2);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision3() {
            OpenProtocolInterpreter.PowerMACS.Mid0108 mid = new OpenProtocolInterpreter.PowerMACS.Mid0108(3);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision4() {
            OpenProtocolInterpreter.PowerMACS.Mid0108 mid = new OpenProtocolInterpreter.PowerMACS.Mid0108(4);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.PowerMACS.Mid0109</para></remarks>
    public class TestMid0109 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.PowerMACS.Mid0109 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.PowerMACS.Mid0109 mid = new OpenProtocolInterpreter.PowerMACS.Mid0109(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.UserInterface.Mid0110</para></remarks>
    public class TestMid0110 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.UserInterface.Mid0110 mid) {
            mid.UserText = "TESTTESTTEST";
        }
        void testRevision1() {
            OpenProtocolInterpreter.UserInterface.Mid0110 mid = new OpenProtocolInterpreter.UserInterface.Mid0110(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.UserInterface.Mid0111</para></remarks>
    public class TestMid0111 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.UserInterface.Mid0111 mid) {
            mid.TextDuration = -1;
            mid.RemovalCondition = OpenProtocolInterpreter.RemovalCondition.ACKNOWLEDGE_OR_WAIT_EXPIRATION_TIME;
            mid.Line1 = "TESTTESTTEST";
            mid.Line2 = "TESTTESTTEST";
            mid.Line3 = "TESTTESTTEST";
            mid.Line4 = "TESTTESTTEST";
        }
        void testRevision1() {
            OpenProtocolInterpreter.UserInterface.Mid0111 mid = new OpenProtocolInterpreter.UserInterface.Mid0111(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.UserInterface.Mid0113</para></remarks>
    public class TestMid0113 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.UserInterface.Mid0113 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.UserInterface.Mid0113 mid = new OpenProtocolInterpreter.UserInterface.Mid0113(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Job.Advanced.Mid0120</para></remarks>
    public class TestMid0120 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.Job.Advanced.Mid0120 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.Job.Advanced.Mid0120 mid = new OpenProtocolInterpreter.Job.Advanced.Mid0120(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Job.Advanced.Mid0121</para></remarks>
    public class TestMid0121 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.Job.Advanced.Mid0121 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.Job.Advanced.Mid0121 mid = new OpenProtocolInterpreter.Job.Advanced.Mid0121(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Job.Advanced.Mid0122</para></remarks>
    public class TestMid0122 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.Job.Advanced.Mid0122 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.Job.Advanced.Mid0122 mid = new OpenProtocolInterpreter.Job.Advanced.Mid0122(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Job.Advanced.Mid0123</para></remarks>
    public class TestMid0123 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.Job.Advanced.Mid0123 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.Job.Advanced.Mid0123 mid = new OpenProtocolInterpreter.Job.Advanced.Mid0123(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Job.Advanced.Mid0124</para></remarks>
    public class TestMid0124 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.Job.Advanced.Mid0124 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.Job.Advanced.Mid0124 mid = new OpenProtocolInterpreter.Job.Advanced.Mid0124(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Job.Advanced.Mid0125</para></remarks>
    public class TestMid0125 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.Job.Advanced.Mid0125 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.Job.Advanced.Mid0125 mid = new OpenProtocolInterpreter.Job.Advanced.Mid0125(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Job.Advanced.Mid0126</para></remarks>
    public class TestMid0126 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.Job.Advanced.Mid0126 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.Job.Advanced.Mid0126 mid = new OpenProtocolInterpreter.Job.Advanced.Mid0126(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Job.Advanced.Mid0127</para></remarks>
    public class TestMid0127 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.Job.Advanced.Mid0127 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.Job.Advanced.Mid0127 mid = new OpenProtocolInterpreter.Job.Advanced.Mid0127(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Job.Advanced.Mid0128</para></remarks>
    public class TestMid0128 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.Job.Advanced.Mid0128 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.Job.Advanced.Mid0128 mid = new OpenProtocolInterpreter.Job.Advanced.Mid0128(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Job.Advanced.Mid0129</para></remarks>
    public class TestMid0129 {
        public void runTests() {
            testRevision1();
            testRevision2();
        }
        public void setAllProperties(OpenProtocolInterpreter.Job.Advanced.Mid0129 mid) {
            mid.ChannelId = -1;
            mid.ParameterSetId = -1;
        }
        void testRevision1() {
            OpenProtocolInterpreter.Job.Advanced.Mid0129 mid = new OpenProtocolInterpreter.Job.Advanced.Mid0129(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision2() {
            OpenProtocolInterpreter.Job.Advanced.Mid0129 mid = new OpenProtocolInterpreter.Job.Advanced.Mid0129(2);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Job.Advanced.Mid0130</para></remarks>
    public class TestMid0130 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.Job.Advanced.Mid0130 mid) {
            mid.JobOffStatus = true;
        }
        void testRevision1() {
            OpenProtocolInterpreter.Job.Advanced.Mid0130 mid = new OpenProtocolInterpreter.Job.Advanced.Mid0130(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Job.Advanced.Mid0131</para></remarks>
    public class TestMid0131 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.Job.Advanced.Mid0131 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.Job.Advanced.Mid0131 mid = new OpenProtocolInterpreter.Job.Advanced.Mid0131(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Job.Advanced.Mid0132</para></remarks>
    public class TestMid0132 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.Job.Advanced.Mid0132 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.Job.Advanced.Mid0132 mid = new OpenProtocolInterpreter.Job.Advanced.Mid0132(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Job.Advanced.Mid0133</para></remarks>
    public class TestMid0133 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.Job.Advanced.Mid0133 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.Job.Advanced.Mid0133 mid = new OpenProtocolInterpreter.Job.Advanced.Mid0133(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Job.Advanced.Mid0140</para></remarks>
    public class TestMid0140 {
        public void runTests() {
            testRevision1();
        }
        // unhandled: SYSTEM.COLLECTIONS.GENERIC.LIST`1[[OPENPROTOCOLINTERPRETER.JOB.ADVANCED.ADVANCEDJOB, RB_OPENPROTOCOLINTERPRETER, VERSION=3.0.3.0, CULTURE=NEUTRAL, PUBLICKEYTOKEN=NULL]]
        public void setAllProperties(OpenProtocolInterpreter.Job.Advanced.Mid0140 mid) {
            mid.JobId = -1;
            mid.JobName = "TESTTESTTEST";
            mid.NumberOfParameterSets = -1;
            mid.JobList = null;
            mid.ForcedOrder = OpenProtocolInterpreter.ForcedOrder.FREE_ORDER;
            mid.LockAtJobDone = true;
            mid.ToolLoosening = OpenProtocolInterpreter.ToolLoosening.ENABLED;
            mid.RepeatJob = true;
            mid.BatchMode = OpenProtocolInterpreter.BatchMode.ONLY_OK;
            mid.BatchStatusAtIncrement = true;
            mid.DecrementBatchAtOkLoosening = true;
            mid.MaxTimeForFirstTightening = -1;
            mid.MaxTimeToCompleteJob = -1;
            mid.DisplayResultAtAutoSelect = -1;
            mid.UsingLineControl = true;
            mid.IdentifierResultPart = OpenProtocolInterpreter.IdentifierPart.JOB_VIN_NUMBER;
            mid.ResultOfNonTightenings = true;
            mid.ResetAllIdentifiersAtJobDone = true;
            mid.Reserved = OpenProtocolInterpreter.Reserved.E;
        }
        void testRevision1() {
            OpenProtocolInterpreter.Job.Advanced.Mid0140 mid = new OpenProtocolInterpreter.Job.Advanced.Mid0140(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.MultipleIdentifiers.Mid0150</para></remarks>
    public class TestMid0150 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.MultipleIdentifiers.Mid0150 mid) {
            mid.IdentifierData = "TESTTESTTEST";
        }
        void testRevision1() {
            OpenProtocolInterpreter.MultipleIdentifiers.Mid0150 mid = new OpenProtocolInterpreter.MultipleIdentifiers.Mid0150(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.MultipleIdentifiers.Mid0151</para></remarks>
    public class TestMid0151 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.MultipleIdentifiers.Mid0151 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.MultipleIdentifiers.Mid0151 mid = new OpenProtocolInterpreter.MultipleIdentifiers.Mid0151(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.MultipleIdentifiers.Mid0152</para></remarks>
    public class TestMid0152 {
        public void runTests() {
            testRevision1();
        }
        // unhandled: OPENPROTOCOLINTERPRETER.MULTIPLEIDENTIFIERS.IDENTIFIERSTATUS
        // unhandled: OPENPROTOCOLINTERPRETER.MULTIPLEIDENTIFIERS.IDENTIFIERSTATUS
        // unhandled: OPENPROTOCOLINTERPRETER.MULTIPLEIDENTIFIERS.IDENTIFIERSTATUS
        // unhandled: OPENPROTOCOLINTERPRETER.MULTIPLEIDENTIFIERS.IDENTIFIERSTATUS
        public void setAllProperties(OpenProtocolInterpreter.MultipleIdentifiers.Mid0152 mid) {
            mid.FirstIdentifierStatus = null;
            mid.SecondIdentifierStatus = null;
            mid.ThirdIdentifierStatus = null;
            mid.FourthIdentifierStatus = null;
        }
        void testRevision1() {
            OpenProtocolInterpreter.MultipleIdentifiers.Mid0152 mid = new OpenProtocolInterpreter.MultipleIdentifiers.Mid0152(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.MultipleIdentifiers.Mid0153</para></remarks>
    public class TestMid0153 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.MultipleIdentifiers.Mid0153 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.MultipleIdentifiers.Mid0153 mid = new OpenProtocolInterpreter.MultipleIdentifiers.Mid0153(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.MultipleIdentifiers.Mid0154</para></remarks>
    public class TestMid0154 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.MultipleIdentifiers.Mid0154 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.MultipleIdentifiers.Mid0154 mid = new OpenProtocolInterpreter.MultipleIdentifiers.Mid0154(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.MultipleIdentifiers.Mid0155</para></remarks>
    public class TestMid0155 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.MultipleIdentifiers.Mid0155 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.MultipleIdentifiers.Mid0155 mid = new OpenProtocolInterpreter.MultipleIdentifiers.Mid0155(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.MultipleIdentifiers.Mid0156</para></remarks>
    public class TestMid0156 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.MultipleIdentifiers.Mid0156 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.MultipleIdentifiers.Mid0156 mid = new OpenProtocolInterpreter.MultipleIdentifiers.Mid0156(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.MultipleIdentifiers.Mid0157</para></remarks>
    public class TestMid0157 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.MultipleIdentifiers.Mid0157 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.MultipleIdentifiers.Mid0157 mid = new OpenProtocolInterpreter.MultipleIdentifiers.Mid0157(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.IOInterface.Mid0200</para></remarks>
    public class TestMid0200 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.IOInterface.Mid0200 mid) {
            mid.StatusRelayOne = OpenProtocolInterpreter.RelayStatus.OFF;
            mid.StatusRelayTwo = OpenProtocolInterpreter.RelayStatus.OFF;
            mid.StatusRelayThree = OpenProtocolInterpreter.RelayStatus.OFF;
            mid.StatusRelayFour = OpenProtocolInterpreter.RelayStatus.OFF;
            mid.StatusRelayFive = OpenProtocolInterpreter.RelayStatus.OFF;
            mid.StatusRelaySix = OpenProtocolInterpreter.RelayStatus.OFF;
            mid.StatusRelaySeven = OpenProtocolInterpreter.RelayStatus.OFF;
            mid.StatusRelayEight = OpenProtocolInterpreter.RelayStatus.OFF;
            mid.StatusRelayNine = OpenProtocolInterpreter.RelayStatus.OFF;
            mid.StatusRelayTen = OpenProtocolInterpreter.RelayStatus.OFF;
        }
        void testRevision1() {
            OpenProtocolInterpreter.IOInterface.Mid0200 mid = new OpenProtocolInterpreter.IOInterface.Mid0200(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.IOInterface.Mid0210</para></remarks>
    public class TestMid0210 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.IOInterface.Mid0210 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.IOInterface.Mid0210 mid = new OpenProtocolInterpreter.IOInterface.Mid0210(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.IOInterface.Mid0211</para></remarks>
    public class TestMid0211 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.IOInterface.Mid0211 mid) {
            mid.StatusDigInOne = true;
            mid.StatusDigInTwo = true;
            mid.StatusDigInThree = true;
            mid.StatusDigInFour = true;
            mid.StatusDigInFive = true;
            mid.StatusDigInSix = true;
            mid.StatusDigInSeven = true;
            mid.StatusDigInEight = true;
        }
        void testRevision1() {
            OpenProtocolInterpreter.IOInterface.Mid0211 mid = new OpenProtocolInterpreter.IOInterface.Mid0211(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.IOInterface.Mid0212</para></remarks>
    public class TestMid0212 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.IOInterface.Mid0212 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.IOInterface.Mid0212 mid = new OpenProtocolInterpreter.IOInterface.Mid0212(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.IOInterface.Mid0213</para></remarks>
    public class TestMid0213 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.IOInterface.Mid0213 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.IOInterface.Mid0213 mid = new OpenProtocolInterpreter.IOInterface.Mid0213(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.IOInterface.Mid0214</para></remarks>
    public class TestMid0214 {
        public void runTests() {
            testRevision1();
            testRevision2();
        }
        public void setAllProperties(OpenProtocolInterpreter.IOInterface.Mid0214 mid) {
            mid.DeviceNumber = -1;
        }
        void testRevision1() {
            OpenProtocolInterpreter.IOInterface.Mid0214 mid = new OpenProtocolInterpreter.IOInterface.Mid0214(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision2() {
            OpenProtocolInterpreter.IOInterface.Mid0214 mid = new OpenProtocolInterpreter.IOInterface.Mid0214(2);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.IOInterface.Mid0215</para></remarks>
    public class TestMid0215 {
        public void runTests() {
            testRevision1();
            testRevision2();
        }
        // unhandled: SYSTEM.COLLECTIONS.GENERIC.LIST`1[[OPENPROTOCOLINTERPRETER.IOINTERFACE.RELAY, RB_OPENPROTOCOLINTERPRETER, VERSION=3.0.3.0, CULTURE=NEUTRAL, PUBLICKEYTOKEN=NULL]]
        // unhandled: SYSTEM.COLLECTIONS.GENERIC.LIST`1[[OPENPROTOCOLINTERPRETER.IOINTERFACE.DIGITALINPUT, RB_OPENPROTOCOLINTERPRETER, VERSION=3.0.3.0, CULTURE=NEUTRAL, PUBLICKEYTOKEN=NULL]]
        public void setAllProperties(OpenProtocolInterpreter.IOInterface.Mid0215 mid) {
            mid.IODeviceId = -1;
            mid.Relays = null;
            mid.DigitalInputs = null;
            mid.NumberOfRelays = -1;
            mid.NumberOfDigitalInputs = -1;
        }
        void testRevision1() {
            OpenProtocolInterpreter.IOInterface.Mid0215 mid = new OpenProtocolInterpreter.IOInterface.Mid0215(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
        void testRevision2() {
            OpenProtocolInterpreter.IOInterface.Mid0215 mid = new OpenProtocolInterpreter.IOInterface.Mid0215(2);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.IOInterface.Mid0216</para></remarks>
    public class TestMid0216 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.IOInterface.Mid0216 mid) {
            mid.RelayNumber = OpenProtocolInterpreter.RelayNumber.OFF;
        }
        void testRevision1() {
            OpenProtocolInterpreter.IOInterface.Mid0216 mid = new OpenProtocolInterpreter.IOInterface.Mid0216(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.IOInterface.Mid0217</para></remarks>
    public class TestMid0217 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.IOInterface.Mid0217 mid) {
            mid.RelayNumber = OpenProtocolInterpreter.RelayNumber.OFF;
            mid.RelayStatus = true;
        }
        void testRevision1() {
            OpenProtocolInterpreter.IOInterface.Mid0217 mid = new OpenProtocolInterpreter.IOInterface.Mid0217(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.IOInterface.Mid0218</para></remarks>
    public class TestMid0218 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.IOInterface.Mid0218 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.IOInterface.Mid0218 mid = new OpenProtocolInterpreter.IOInterface.Mid0218(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.IOInterface.Mid0219</para></remarks>
    public class TestMid0219 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.IOInterface.Mid0219 mid) {
            mid.RelayNumber = OpenProtocolInterpreter.RelayNumber.OFF;
        }
        void testRevision1() {
            OpenProtocolInterpreter.IOInterface.Mid0219 mid = new OpenProtocolInterpreter.IOInterface.Mid0219(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.IOInterface.Mid0220</para></remarks>
    public class TestMid0220 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.IOInterface.Mid0220 mid) {
            mid.DigitalInputNumber = OpenProtocolInterpreter.DigitalInputNumber.OFF;
        }
        void testRevision1() {
            OpenProtocolInterpreter.IOInterface.Mid0220 mid = new OpenProtocolInterpreter.IOInterface.Mid0220(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.IOInterface.Mid0221</para></remarks>
    public class TestMid0221 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.IOInterface.Mid0221 mid) {
            mid.DigitalInputNumber = OpenProtocolInterpreter.DigitalInputNumber.OFF;
            mid.DigitalInputStatus = true;
        }
        void testRevision1() {
            OpenProtocolInterpreter.IOInterface.Mid0221 mid = new OpenProtocolInterpreter.IOInterface.Mid0221(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.IOInterface.Mid0222</para></remarks>
    public class TestMid0222 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.IOInterface.Mid0222 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.IOInterface.Mid0222 mid = new OpenProtocolInterpreter.IOInterface.Mid0222(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.IOInterface.Mid0223</para></remarks>
    public class TestMid0223 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.IOInterface.Mid0223 mid) {
            mid.DigitalInputNumber = OpenProtocolInterpreter.DigitalInputNumber.OFF;
        }
        void testRevision1() {
            OpenProtocolInterpreter.IOInterface.Mid0223 mid = new OpenProtocolInterpreter.IOInterface.Mid0223(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.IOInterface.Mid0224</para></remarks>
    public class TestMid0224 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.IOInterface.Mid0224 mid) {
            mid.DigitalInputNumber = OpenProtocolInterpreter.DigitalInputNumber.OFF;
        }
        void testRevision1() {
            OpenProtocolInterpreter.IOInterface.Mid0224 mid = new OpenProtocolInterpreter.IOInterface.Mid0224(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.IOInterface.Mid0225</para></remarks>
    public class TestMid0225 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.IOInterface.Mid0225 mid) {
            mid.DigitalInputNumber = OpenProtocolInterpreter.DigitalInputNumber.OFF;
        }
        void testRevision1() {
            OpenProtocolInterpreter.IOInterface.Mid0225 mid = new OpenProtocolInterpreter.IOInterface.Mid0225(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.PLCUserData.Mid0240</para></remarks>
    public class TestMid0240 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.PLCUserData.Mid0240 mid) {
            mid.UserData = "TESTTESTTEST";
        }
        void testRevision1() {
            OpenProtocolInterpreter.PLCUserData.Mid0240 mid = new OpenProtocolInterpreter.PLCUserData.Mid0240(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.PLCUserData.Mid0241</para></remarks>
    public class TestMid0241 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.PLCUserData.Mid0241 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.PLCUserData.Mid0241 mid = new OpenProtocolInterpreter.PLCUserData.Mid0241(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.PLCUserData.Mid0242</para></remarks>
    public class TestMid0242 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.PLCUserData.Mid0242 mid) {
            mid.UserData = "TESTTESTTEST";
        }
        void testRevision1() {
            OpenProtocolInterpreter.PLCUserData.Mid0242 mid = new OpenProtocolInterpreter.PLCUserData.Mid0242(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.PLCUserData.Mid0243</para></remarks>
    public class TestMid0243 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.PLCUserData.Mid0243 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.PLCUserData.Mid0243 mid = new OpenProtocolInterpreter.PLCUserData.Mid0243(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.PLCUserData.Mid0244</para></remarks>
    public class TestMid0244 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.PLCUserData.Mid0244 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.PLCUserData.Mid0244 mid = new OpenProtocolInterpreter.PLCUserData.Mid0244(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.PLCUserData.Mid0245</para></remarks>
    public class TestMid0245 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.PLCUserData.Mid0245 mid) {
            mid.Offset = -1;
            mid.UserData = "TESTTESTTEST";
        }
        void testRevision1() {
            OpenProtocolInterpreter.PLCUserData.Mid0245 mid = new OpenProtocolInterpreter.PLCUserData.Mid0245(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.ApplicationSelector.Mid0250</para></remarks>
    public class TestMid0250 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.ApplicationSelector.Mid0250 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.ApplicationSelector.Mid0250 mid = new OpenProtocolInterpreter.ApplicationSelector.Mid0250(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.ApplicationSelector.Mid0251</para></remarks>
    public class TestMid0251 {
        public void runTests() {
            testRevision1();
        }
        // unhandled: SYSTEM.COLLECTIONS.GENERIC.LIST`1[[SYSTEM.BOOLEAN, MSCORLIB, VERSION=4.0.0.0, CULTURE=NEUTRAL, PUBLICKEYTOKEN=B77A5C561934E089]]
        public void setAllProperties(OpenProtocolInterpreter.ApplicationSelector.Mid0251 mid) {
            mid.DeviceId = -1;
            mid.NumberOfSockets = -1;
            mid.SocketStatus = null;
        }
        void testRevision1() {
            OpenProtocolInterpreter.ApplicationSelector.Mid0251 mid = new OpenProtocolInterpreter.ApplicationSelector.Mid0251(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.ApplicationSelector.Mid0252</para></remarks>
    public class TestMid0252 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.ApplicationSelector.Mid0252 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.ApplicationSelector.Mid0252 mid = new OpenProtocolInterpreter.ApplicationSelector.Mid0252(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.ApplicationSelector.Mid0253</para></remarks>
    public class TestMid0253 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.ApplicationSelector.Mid0253 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.ApplicationSelector.Mid0253 mid = new OpenProtocolInterpreter.ApplicationSelector.Mid0253(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.ApplicationSelector.Mid0254</para></remarks>
    public class TestMid0254 {
        public void runTests() {
            testRevision1();
        }
        // unhandled: SYSTEM.COLLECTIONS.GENERIC.LIST`1[[OPENPROTOCOLINTERPRETER.LIGHTCOMMAND, RB_OPENPROTOCOLINTERPRETER, VERSION=3.0.3.0, CULTURE=NEUTRAL, PUBLICKEYTOKEN=NULL]]
        public void setAllProperties(OpenProtocolInterpreter.ApplicationSelector.Mid0254 mid) {
            mid.DeviceId = -1;
            mid.GreenLights = null;
        }
        void testRevision1() {
            OpenProtocolInterpreter.ApplicationSelector.Mid0254 mid = new OpenProtocolInterpreter.ApplicationSelector.Mid0254(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.ApplicationSelector.Mid0255</para></remarks>
    public class TestMid0255 {
        public void runTests() {
            testRevision1();
        }
        // unhandled: SYSTEM.COLLECTIONS.GENERIC.LIST`1[[OPENPROTOCOLINTERPRETER.LIGHTCOMMAND, RB_OPENPROTOCOLINTERPRETER, VERSION=3.0.3.0, CULTURE=NEUTRAL, PUBLICKEYTOKEN=NULL]]
        public void setAllProperties(OpenProtocolInterpreter.ApplicationSelector.Mid0255 mid) {
            mid.DeviceId = -1;
            mid.RedLights = null;
        }
        void testRevision1() {
            OpenProtocolInterpreter.ApplicationSelector.Mid0255 mid = new OpenProtocolInterpreter.ApplicationSelector.Mid0255(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.ApplicationToolLocationSystem.Mid0260</para></remarks>
    public class TestMid0260 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.ApplicationToolLocationSystem.Mid0260 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.ApplicationToolLocationSystem.Mid0260 mid = new OpenProtocolInterpreter.ApplicationToolLocationSystem.Mid0260(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.ApplicationToolLocationSystem.Mid0261</para></remarks>
    public class TestMid0261 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.ApplicationToolLocationSystem.Mid0261 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.ApplicationToolLocationSystem.Mid0261 mid = new OpenProtocolInterpreter.ApplicationToolLocationSystem.Mid0261(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.ApplicationToolLocationSystem.Mid0262</para></remarks>
    public class TestMid0262 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.ApplicationToolLocationSystem.Mid0262 mid) {
            mid.ToolTagId = "TESTTESTTEST";
        }
        void testRevision1() {
            OpenProtocolInterpreter.ApplicationToolLocationSystem.Mid0262 mid = new OpenProtocolInterpreter.ApplicationToolLocationSystem.Mid0262(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.ApplicationToolLocationSystem.Mid0263</para></remarks>
    public class TestMid0263 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.ApplicationToolLocationSystem.Mid0263 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.ApplicationToolLocationSystem.Mid0263 mid = new OpenProtocolInterpreter.ApplicationToolLocationSystem.Mid0263(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.ApplicationToolLocationSystem.Mid0264</para></remarks>
    public class TestMid0264 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.ApplicationToolLocationSystem.Mid0264 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.ApplicationToolLocationSystem.Mid0264 mid = new OpenProtocolInterpreter.ApplicationToolLocationSystem.Mid0264(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.ApplicationToolLocationSystem.Mid0265</para></remarks>
    public class TestMid0265 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.ApplicationToolLocationSystem.Mid0265 mid) {
            mid.ToolTagId = "TESTTESTTEST";
            mid.ToolStatus = OpenProtocolInterpreter.ToolStatus.OPERABLE;
        }
        void testRevision1() {
            OpenProtocolInterpreter.ApplicationToolLocationSystem.Mid0265 mid = new OpenProtocolInterpreter.ApplicationToolLocationSystem.Mid0265(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.ApplicationController.Mid0270</para></remarks>
    public class TestMid0270 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.ApplicationController.Mid0270 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.ApplicationController.Mid0270 mid = new OpenProtocolInterpreter.ApplicationController.Mid0270(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Statistic.Mid0300</para></remarks>
    public class TestMid0300 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.Statistic.Mid0300 mid) {
            mid.ParameterSetId = -1;
            mid.HistogramType = OpenProtocolInterpreter.HistogramType.TORQUE;
        }
        void testRevision1() {
            OpenProtocolInterpreter.Statistic.Mid0300 mid = new OpenProtocolInterpreter.Statistic.Mid0300(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Statistic.Mid0301</para></remarks>
    public class TestMid0301 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.Statistic.Mid0301 mid) {
            mid.ParameterSetId = -1;
            mid.HistogramType = OpenProtocolInterpreter.HistogramType.TORQUE;
            mid.SigmaHistogram = -1m;
            mid.MeanValueHistogram = -1m;
            mid.ClassRange = -1m;
            mid.FirstBar = -1;
            mid.SecondBar = -1;
            mid.ThirdBar = -1;
            mid.FourthBar = -1;
            mid.FifthBar = -1;
            mid.SixthBar = -1;
            mid.SeventhBar = -1;
            mid.EighthBar = -1;
            mid.NinethBar = -1;
        }
        void testRevision1() {
            OpenProtocolInterpreter.Statistic.Mid0301 mid = new OpenProtocolInterpreter.Statistic.Mid0301(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.AutomaticManualMode.Mid0400</para></remarks>
    public class TestMid0400 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.AutomaticManualMode.Mid0400 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.AutomaticManualMode.Mid0400 mid = new OpenProtocolInterpreter.AutomaticManualMode.Mid0400(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.AutomaticManualMode.Mid0401</para></remarks>
    public class TestMid0401 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.AutomaticManualMode.Mid0401 mid) {
            mid.ManualAutomaticMode = true;
        }
        void testRevision1() {
            OpenProtocolInterpreter.AutomaticManualMode.Mid0401 mid = new OpenProtocolInterpreter.AutomaticManualMode.Mid0401(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.AutomaticManualMode.Mid0402</para></remarks>
    public class TestMid0402 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.AutomaticManualMode.Mid0402 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.AutomaticManualMode.Mid0402 mid = new OpenProtocolInterpreter.AutomaticManualMode.Mid0402(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.AutomaticManualMode.Mid0403</para></remarks>
    public class TestMid0403 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.AutomaticManualMode.Mid0403 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.AutomaticManualMode.Mid0403 mid = new OpenProtocolInterpreter.AutomaticManualMode.Mid0403(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.AutomaticManualMode.Mid0410</para></remarks>
    public class TestMid0410 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.AutomaticManualMode.Mid0410 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.AutomaticManualMode.Mid0410 mid = new OpenProtocolInterpreter.AutomaticManualMode.Mid0410(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.AutomaticManualMode.Mid0411</para></remarks>
    public class TestMid0411 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.AutomaticManualMode.Mid0411 mid) {
            mid.AutoDisableSetting = -1;
            mid.CurrentBatch = -1;
        }
        void testRevision1() {
            OpenProtocolInterpreter.AutomaticManualMode.Mid0411 mid = new OpenProtocolInterpreter.AutomaticManualMode.Mid0411(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.OpenProtocolCommandsDisabled.Mid0420</para></remarks>
    public class TestMid0420 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.OpenProtocolCommandsDisabled.Mid0420 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.OpenProtocolCommandsDisabled.Mid0420 mid = new OpenProtocolInterpreter.OpenProtocolCommandsDisabled.Mid0420(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.OpenProtocolCommandsDisabled.Mid0421</para></remarks>
    public class TestMid0421 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.OpenProtocolCommandsDisabled.Mid0421 mid) {
            mid.DigitalInputStatus = true;
        }
        void testRevision1() {
            OpenProtocolInterpreter.OpenProtocolCommandsDisabled.Mid0421 mid = new OpenProtocolInterpreter.OpenProtocolCommandsDisabled.Mid0421(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.OpenProtocolCommandsDisabled.Mid0422</para></remarks>
    public class TestMid0422 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.OpenProtocolCommandsDisabled.Mid0422 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.OpenProtocolCommandsDisabled.Mid0422 mid = new OpenProtocolInterpreter.OpenProtocolCommandsDisabled.Mid0422(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.OpenProtocolCommandsDisabled.Mid0423</para></remarks>
    public class TestMid0423 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.OpenProtocolCommandsDisabled.Mid0423 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.OpenProtocolCommandsDisabled.Mid0423 mid = new OpenProtocolInterpreter.OpenProtocolCommandsDisabled.Mid0423(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.MotorTuning.Mid0500</para></remarks>
    public class TestMid0500 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.MotorTuning.Mid0500 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.MotorTuning.Mid0500 mid = new OpenProtocolInterpreter.MotorTuning.Mid0500(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.MotorTuning.Mid0501</para></remarks>
    public class TestMid0501 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.MotorTuning.Mid0501 mid) {
            mid.MotorTuneResult = true;
        }
        void testRevision1() {
            OpenProtocolInterpreter.MotorTuning.Mid0501 mid = new OpenProtocolInterpreter.MotorTuning.Mid0501(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.MotorTuning.Mid0502</para></remarks>
    public class TestMid0502 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.MotorTuning.Mid0502 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.MotorTuning.Mid0502 mid = new OpenProtocolInterpreter.MotorTuning.Mid0502(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.MotorTuning.Mid0503</para></remarks>
    public class TestMid0503 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.MotorTuning.Mid0503 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.MotorTuning.Mid0503 mid = new OpenProtocolInterpreter.MotorTuning.Mid0503(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.MotorTuning.Mid0504</para></remarks>
    public class TestMid0504 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.MotorTuning.Mid0504 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.MotorTuning.Mid0504 mid = new OpenProtocolInterpreter.MotorTuning.Mid0504(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Result.Mid1201</para></remarks>
    public class TestMid1201 {
        public void runTests() {
            testRevision1();
        }
        // unhandled: SYSTEM.COLLECTIONS.GENERIC.LIST`1[[OPENPROTOCOLINTERPRETER.RESULT.OBJECTDATA, RB_OPENPROTOCOLINTERPRETER, VERSION=3.0.3.0, CULTURE=NEUTRAL, PUBLICKEYTOKEN=NULL]]
        // unhandled: SYSTEM.COLLECTIONS.GENERIC.LIST`1[[OPENPROTOCOLINTERPRETER.RESULT.VARIABLEDATAFIELD, RB_OPENPROTOCOLINTERPRETER, VERSION=3.0.3.0, CULTURE=NEUTRAL, PUBLICKEYTOKEN=NULL]]
        public void setAllProperties(OpenProtocolInterpreter.Result.Mid1201 mid) {
            mid.TotalNumberOfMessages = -1;
            mid.MessageNumber = -1;
            mid.ResultDataIdentifier = -1;
            mid.Time = System.DateTime.MinValue;
            mid.ResultStatus = true;
            mid.OperationType = OpenProtocolInterpreter.OperationType.NON_SYNCHRONIZED_TIGHTENING;
            mid.NumberOfObjects = -1;
            mid.NumberOfDataFields = -1;
            mid.ObjectDataList = null;
            mid.VariableDataFields = null;
        }
        void testRevision1() {
            OpenProtocolInterpreter.Result.Mid1201 mid = new OpenProtocolInterpreter.Result.Mid1201(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Result.Mid1202</para></remarks>
    public class TestMid1202 {
        public void runTests() {
            testRevision1();
        }
        // unhandled: SYSTEM.COLLECTIONS.GENERIC.LIST`1[[OPENPROTOCOLINTERPRETER.RESULT.VARIABLEDATAFIELD, RB_OPENPROTOCOLINTERPRETER, VERSION=3.0.3.0, CULTURE=NEUTRAL, PUBLICKEYTOKEN=NULL]]
        public void setAllProperties(OpenProtocolInterpreter.Result.Mid1202 mid) {
            mid.TotalNumberOfMessages = -1;
            mid.MessageNumber = -1;
            mid.ResultDataIdentifier = -1;
            mid.ObjectId = -1;
            mid.NumberOfDataFields = -1;
            mid.VariableDataFields = null;
        }
        void testRevision1() {
            OpenProtocolInterpreter.Result.Mid1202 mid = new OpenProtocolInterpreter.Result.Mid1202(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.Result.Mid1203</para></remarks>
    public class TestMid1203 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.Result.Mid1203 mid) {
        }
        void testRevision1() {
            OpenProtocolInterpreter.Result.Mid1203 mid = new OpenProtocolInterpreter.Result.Mid1203(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.ParameterSet.Mid2504</para></remarks>
    public class TestMid2504 {
        public void runTests() {
            testRevision1();
        }
        public void setAllProperties(OpenProtocolInterpreter.ParameterSet.Mid2504 mid) {
            mid.ParameterSetId = -1;
        }
        void testRevision1() {
            OpenProtocolInterpreter.ParameterSet.Mid2504 mid = new OpenProtocolInterpreter.ParameterSet.Mid2504(1);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
    // <summary>test</summary>
    // <remarks><para>Type=OpenProtocolInterpreter.KeepAlive.Mid9999</para></remarks>
    public class TestMid9999 {
        public void runTests() {
            testRevision0();
        }
        public void setAllProperties(OpenProtocolInterpreter.KeepAlive.Mid9999 mid) {
        }
        void testRevision0() {
            OpenProtocolInterpreter.KeepAlive.Mid9999 mid = new OpenProtocolInterpreter.KeepAlive.Mid9999(0);
            string package;

            this.setAllProperties(mid);
            package = mid.Pack();
            System.Diagnostics.Trace.WriteLine(("package = " 
                            + (package + ".")));
        }
    }
}
